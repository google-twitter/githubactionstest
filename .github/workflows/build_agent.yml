# This is a basic workflow to help you get started with Actions

name: Test CI agent

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      #########################################
      # Net Framework 4.8 Setups
      #########################################
      # Setting up msbuild for Net Framework
      - name: .Net Fx - Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        
      # Setting up NugGet.exe for Net Framework
      - name: Net Fx - Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5
        
      # Restore Nuget Packages
      - name: Net Fx - Restore nuget packages
        run: nuget restore GithubActionsTests.sln

      #########################################
      # Net Core Setups
      #########################################
      # Setup .Net Core SDK
      - name: .Net Core - Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      
      # Restore Nugets and dependencies
      - name: .Net Core - Restore nuget and dependencies
        run: dotnet restore
      
      #########################################
      # Solution Build
      #########################################
      # Build Solution
      - name: Build
        run: dotnet build --no-restore
      
      #########################################
      # Unit Tests
      #########################################
      - name: .Net Core Unit Test
        run: dotnet test --no-build --verbosity normal
